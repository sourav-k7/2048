{"version":3,"sources":["component/Board/cell/cell.module.css","component/Board/board.module.css","component/scoreboard/scoreboard.module.css","component/Board/cell/cell.js","component/Board/Board.js","component/scoreboard/scoreboard.js","utility/emptyboard.js","UI/endscreen/endscreen.js","container/BoardControl/BoardControl.js","App.js","index.js","UI/endscreen/endscreen.module.css"],"names":["module","exports","cell","props","className","classes","Cell","style","backgroundColor","val","Math","log2","board","Board","map","row","value","_uniqueId","scoreboard","Scoreboard","score","best","onClick","clicked","emptyBoard","endScreen","Endscreen","fontSize","marginTop","win","Button","BoardControl","endGame","adjCellPos","end","i","k","s","setState","lose","addNumber","option","push","x","y","pick","floor","random","length","newNumber","slide","direction","newBoard","newScore","state","newRow","filter","unshift","Array","fill","check","transpose","newGameHandler","keyDownHandler","event","keyCode","oldBoard","this","window","addEventListener","removeEventListener","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c34bb10.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cell\":\"cell_Cell__17M2O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Board\":\"board_Board__1TOxL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Scoreboard\":\"scoreboard_Scoreboard__VL2WO\"};","import React from 'react';\r\nimport classes from './cell.module.css'\r\nconst cell  = (props) => {\r\n\tlet background=['rgba(255,255,255,0.3)','#9600ff','#f0145a','#ffc91b',\r\n\t'#0ed145','#0095d6','#ce007b','#ff5518','#29d7a5','#b83dba','#ff0024'\r\n\t,'#5f069b'];\r\n\treturn ( \r\n\t\t<div className={classes.Cell} \r\n\t\tstyle={{backgroundColor: background[props.val?Math.log2(props.val):props.val]}}>\r\n\t\t\t{props.val}</div>\r\n\t);\r\n}\r\n \r\nexport default cell ;","import React from 'react';\r\nimport Cell from './cell/cell';\r\nimport classes from './board.module.css'\r\nimport _uniqueId from 'lodash/uniqueId';\r\n\r\nconst board = (props) =>{\r\n\treturn(\r\n\r\n\t<div className={classes.Board} >\r\n\t\t{\r\n\t\t\tprops.board.map((row)=>{\r\n\t\t\t\treturn row.map((value)=>\r\n\t\t\t\t\t<Cell val={value} key={_uniqueId('cell_')} />\r\n\t\t\t\t)\r\n\t\t\t})\r\n\t\t}\r\n\t\t\r\n\t</div>\r\n)}; \r\n\r\nexport default board;","import React from 'react';\r\nimport classes from './scoreboard.module.css'\r\nconst scoreboard = (props) => {\r\n\treturn ( \r\n\t\t<center className={classes.Scoreboard}>\r\n\t\t\t<span>Score: {props.score}</span>\r\n\t\t\t<span>Best: {props.best}</span>\r\n\t\t\t<div onClick={props.clicked}>New Game</div>\r\n\t\t</center>\r\n\t );\r\n}\r\n \r\nexport default scoreboard;","const emptyBoard=()=>{\r\n\treturn [\r\n\t\t[0,0,0,0],\r\n\t\t[0,0,0,0],\r\n\t\t[0,0,0,0],\r\n\t\t[0,0,0,0]\r\n\t\t]\r\n}\r\n\r\nexport default emptyBoard;","import React from 'react';\r\nimport classes from './endscreen.module.css'\r\nconst endScreen = (props) => {\r\n\treturn ( \r\n\t\t<div className={classes.Endscreen}>\r\n\t\t\t<div style={{fontSize:150,marginTop:\"200px\"}}>{props.win?\"You win\":\"You Lose\"}</div>\r\n\t\t\t<div style={{fontSize:30}}>Score:{props.score} Best:{props.best}</div>\r\n\t\t\t<div onClick={props.clicked} className={classes.Button}>Play Again</div>\r\n\t\t</div>\r\n\t );\r\n}\r\n \r\nexport default endScreen;","import React, { Component, Fragment } from 'react';\r\nimport Board from '../../component/Board/Board'\r\nimport Scoreboard from '../../component/scoreboard/scoreboard';\r\nimport emptyBoard from '../../utility/emptyboard';\r\nimport Endscreen from '../../UI/endscreen/endscreen';\r\n\r\nclass BoardControl extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tBoard:this.addNumber(emptyBoard()),\r\n\t\t\tscore:0,\r\n\t\t\tbest:0,\r\n\t\t\twin:false,\r\n\t\t\tlose:false,\r\n\t\t}\r\n\t}\r\n\t// function to check game ended or not\r\n\tendGame=(board)=>{\r\n\t\tlet adjCellPos=[[-1,0],[1,0],[0,1],[0,-1]];\r\n\t\tlet end = true;\r\n\t\tfor(let i =0;i<4;i++)\r\n\t\t{\r\n\t\t\tfor(let k =0;k<4;k++)\r\n\t\t\t{\r\n\t\t\t\tfor(let s=0;s<4;s++)\t\r\n\t\t\t\t{\r\n\t\t\t\tif((i+adjCellPos[s][0]>-1)&&\r\n\t\t\t\t(i+adjCellPos[s][0]<4)&&\r\n\t\t\t\t(k+adjCellPos[s][1]>-1)&&\r\n\t\t\t\t(k+adjCellPos[s][1]<4)\t\t\t\r\n\t\t\t\t\t\t)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(board[i+adjCellPos[s][0]][k+adjCellPos[s][1]]===board[i][k])\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tend=false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!end)\r\n\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(!end)\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tif(end)\r\n\t\tthis.setState({lose:end});\r\n\t}\r\n\t// function to added 2/4 randomly on the board\r\n\taddNumber=(board)=>{\r\n\t\tlet option=[];\r\n\t\tfor(let i =0;i<4;i++){\r\n\t\t\tfor(let k=0;k<4;k++){\r\n\t\t\t\tif(board[i][k]===0)\r\n\t\t\t\toption.push({x:i,y:k})\t;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst pick = option[Math.floor(Math.random()*option.length)];\r\n\t\tconst newNumber = Math.random()>0.5?2:4;\r\n\t\tboard[pick.x][pick.y]=newNumber;\r\n\t\tif(option.length===1)\r\n\t\t{\r\n\t\t\tthis.endGame(board);\r\n\t\t}\r\n\t\treturn board;\r\n\t\t\t\t\r\n\t}\r\n\t//function to check whether there is change in the board or not \r\n\tcheck(oldBoard,newBoard){\r\n\t\tfor(let i =0;i<4;i++){\r\n\t\t\tfor(let k =0;k<4;k++){\r\n\t\t\t\tif(oldBoard[i][k]!==newBoard[i][k])\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t//function to move cell to right or left\r\n\tslide=(direction,board)=>{\r\n\t\tlet newBoard=board;\r\n\t\tlet newScore = this.state.score;\r\n\t\tnewBoard=newBoard.map((row)=>{\r\n\t\t\tlet newRow= row.filter((val)=>val);\r\n\t\t\tif(direction==='right')\r\n\t\t\t{\r\n\t\t\t\t// this combine the adj cell if equal\r\n\t\t\t\tfor(let i =newRow.length;i>0;i--){\r\n\t\t\t\t\tif(newRow[i]===newRow[i-1])\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnewRow[i]=newRow[i]+newRow[i-1];\r\n\t\t\t\t\t\tnewScore+=newRow[i];\r\n\t\t\t\t\t\tif(newRow[i]===2048)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.setState({win:true});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tnewRow[i-1]=0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//this removes the unwanted cell after merging\r\n\t\t\t\tnewRow=newRow.filter((val)=>val);\r\n\t\t\t\tnewRow.unshift(...Array(4-newRow.length).fill(0));\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t// this combine the adj cell if equal\r\n\t\t\t\tfor(let i =0;i<newRow.length-1;i++){\r\n\t\t\t\t\tif(newRow[i]===newRow[i+1])\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnewRow[i]=newRow[i]+newRow[i+1];\r\n\t\t\t\t\t\tnewScore+=newRow[i];\r\n\t\t\t\t\t\tif(newRow===2048)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.setState({win:true});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tnewRow[i+1]=0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// this remove the extra cell after merging equal cell\r\n\t\t\t\tnewRow=newRow.filter((val)=>val);\r\n\t\t\t\tnewRow.push(...Array(4-newRow.length).fill(0));\r\n\t\t\t}\r\n\t\t\treturn newRow;\r\n\t\t})\r\n\t\t// if nothing is moved in the board then new number will not be \r\n\t\t// added\r\n\t\tif(this.check(board,newBoard))\r\n\t\tnewBoard=this.addNumber(newBoard);\r\n\t\treturn [newBoard,newScore];\r\n\t}\r\n\t//transpose of Board\r\n\ttranspose=(board)=>{\r\n\t\tlet newBoard=emptyBoard();\r\n\t\tfor(let i =0;i<4;i++){\r\n\t\t\tfor(let k =0;k<4;k++){\r\n\t\t\t\tnewBoard[i][k]=board[k][i];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn newBoard;\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tthis.setState({Board:this.addNumber(this.state.Board)});\r\n\t\twindow.addEventListener('keydown',this.keyDownHandler);\r\n\t}\r\n\tcomponentWillUnmount(){\r\n\t\twindow.removeEventListener('keydown',this.keyDownHandler);\r\n\t}\r\n\t\r\n\tnewGameHandler = ()=>{\r\n\t\tthis.setState({Board:this.addNumber(this.addNumber(emptyBoard())),score:0,win:0,lose:0})\r\n\t}\r\n\tkeyDownHandler=(event)=>{\r\n\t\tif(this.state.win||this.state.lose)\r\n\t\t{\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\tlet newBoard,newScore;\r\n\t\tif(event.keyCode===39)\r\n\t\t{\r\n\t\t\t[newBoard,newScore]=this.slide('right',this.state.Board)\r\n\t\t}\r\n\t\telse if (event.keyCode===37)\r\n\t\t{\r\n\t\t\t[newBoard,newScore]=this.slide('left',this.state.Board)\r\n\t\t\t\r\n\t\t}\r\n\t\telse if (event.keyCode===38)\r\n\t\t{\r\n\t\t\t// to move up every thing \r\n\t\t\t// 1.transpose mat\r\n\t\t\t// 2. move everything left \r\n\t\t\t// 3. transpose again\r\n\t\t\tnewBoard = this.transpose(this.state.Board)\t;\r\n\t\t\t[newBoard,newScore]=this.slide('left',newBoard);\r\n\t\t\tnewBoard = this.transpose(newBoard)\r\n\t\t}\r\n\t\telse{\r\n\t\t\t// similar to up but the direction will be right\r\n\t\t\tnewBoard = this.transpose(this.state.Board)\t;\r\n\t\t\t[newBoard,newScore]=this.slide('right',newBoard);\r\n\t\t\tnewBoard = this.transpose(newBoard)\r\n\t\t}\r\n\t\tthis.setState({Board:newBoard,best:(newScore>this.state.best?newScore:this.state.best),score:newScore})\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\trender() { \r\n\t\treturn (\r\n\t<Fragment> \r\n\t\t{\r\n\t\t\t(this.state.win||this.state.lose)?\r\n\t\t\t<Endscreen win={this.state.win} score={this.state.score}\r\n\t\t\tbest={this.state.best} clicked={this.newGameHandler} />:null\r\n\t\t}\r\n\t        <h1>2048</h1>\r\n\t\t<Scoreboard score={this.state.score}\r\n\t\t best={this.state.best}\r\n\t\t  clicked={this.newGameHandler} \r\n\t\t  />\r\n\t\t<Board board={this.state.Board} \r\n\t\t/>\r\n    \t</Fragment> \r\n    );\r\n\t}\r\n}\r\n \r\nexport default BoardControl;","import React from 'react'\nimport BoardControl from './container/BoardControl/BoardControl';\nfunction App() {\n  return (\n      <BoardControl />\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Endscreen\":\"endscreen_Endscreen__1l3on\",\"Button\":\"endscreen_Button__B4zpZ\"};"],"sourceRoot":""}